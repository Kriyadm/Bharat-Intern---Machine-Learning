import pandas as pd
import numpy as np
from sklearn.neighbors import NearestNeighbors
from fuzzywuzzy import process

# Define the KNN model for collaborative filtering
cf_knn_model = NearestNeighbors(metric='cosine', algorithm='brute', n_neighbors=10, n_jobs=-1)
cf_knn_model.fit(user_item_matrix)

def movie_recommender_engine(movie_name, matrix, cf_model, n_recs):
    # Find the closest matching movie title
    closest_title = find_closest_title(movie_name, movies['title'].tolist())
    if not closest_title:
        print(f"No matching movie found for '{movie_name}'.")
        return pd.DataFrame()
    
    # Find the movie ID of the closest matching movie
    movie_id = movies[movies['title'] == closest_title]['movieId'].values
    if len(movie_id) == 0:
        print(f"Movie ID for '{closest_title}' not found in the dataset.")
        return pd.DataFrame()
    
    movie_id = movie_id[0]

    # Ensure the movie ID is in the matrix columns
    if movie_id not in matrix.columns:
        print(f"Movie ID {movie_id} not found in the user-item matrix.")
        return pd.DataFrame()

    # Create a query vector for the movie
    query_vector = np.zeros(matrix.shape[1])
    if movie_id in matrix.columns:
        query_vector[matrix.columns.get_loc(movie_id)] = 1
    
    # Calculate neighbor distances
    distances, indices = cf_model.kneighbors(query_vector.reshape(1, -1), n_neighbors=n_recs)
    
    # List to store recommendations
    cf_recs = []
    for i in indices.squeeze().tolist():
        if i < len(matrix.columns):
            movie_id_rec = matrix.columns[i]
            rec_title = movies[movies['movieId'] == movie_id_rec]['title'].values[0]
            cf_recs.append({'Title': rec_title, 'Distance': distances.squeeze().tolist()[indices.squeeze().tolist().index(i)]})
    
    # Return a DataFrame of recommendations
    df = pd.DataFrame(cf_recs, index=range(1, len(cf_recs) + 1))
    
    return df

# Example usage for Collaborative Filtering
print("\nCollaborative Filtering Recommendations:")
cf_recommendations = movie_recommender_engine('Million Dollar Baby', user_item_matrix, cf_knn_model, 10)
if cf_recommendations is not None:
    print(cf_recommendations)
